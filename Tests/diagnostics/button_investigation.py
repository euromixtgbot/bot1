#!/usr/bin/env python3
"""
–î–æ—Å–ª—ñ–¥–∂–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º–∏ –∑ –∫–Ω–æ–ø–∫–æ—é –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —Ç–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –Ω–æ–≤–æ—ó —Å–∏—Å—Ç–µ–º–∏ —Ñ–∞–π–ª—ñ–≤
"""

import sys
import os
import time
import json
from datetime import datetime
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def test_button_encoding():
    """–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ä—ñ–∑–Ω–∏—Ö –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤ –∫–æ–¥—É–≤–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç—É –∫–Ω–æ–ø–∫–∏"""
    
    print("=" * 80)
    print("üîç –î–û–°–õ–Ü–î–ñ–ï–ù–ù–Ø –ü–†–û–ë–õ–ï–ú–ò –ó –ö–ù–û–ü–ö–û–Æ –ü–Ü–î–¢–í–ï–†–î–ñ–ï–ù–ù–Ø")
    print("=" * 80)
    
    # –†—ñ–∑–Ω—ñ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ —Å–∏–º–≤–æ–ª—É –≥–∞–ª–æ—á–∫–∏
    checkmarks = [
        "‚úÖ",  # U+2705 WHITE HEAVY CHECK MARK
        "‚úì",   # U+2713 CHECK MARK  
        "‚òë",   # U+2611 BALLOT BOX WITH CHECK
        "‚òëÔ∏è",  # U+2611 + U+FE0F BALLOT BOX WITH CHECK + VARIATION SELECTOR-16
        "‚úî",   # U+2714 HEAVY CHECK MARK
        "‚úîÔ∏è"   # U+2714 + U+FE0F HEAVY CHECK MARK + VARIATION SELECTOR-16
    ]
    
    base_text = " –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏"
    
    print("\nüìù –í–ê–†–Ü–ê–ù–¢–ò –¢–ï–ö–°–¢–£ –ö–ù–û–ü–ö–ò:")
    for i, check in enumerate(checkmarks):
        full_text = check + base_text
        print(f"{i+1}. '{full_text}'")
        print(f"   Unicode: {[ord(c) for c in check]}")
        print(f"   UTF-8 hex: {check.encode('utf-8').hex()}")
        print(f"   –ë–∞–π—Ç: {len(full_text.encode('utf-8'))}")
        print()
    
    print("üéØ –í–ò–°–ù–û–í–û–ö:")
    print("–†—ñ–∑–Ω—ñ –∫–ª—ñ—î–Ω—Ç–∏ Telegram –º–æ–∂—É—Ç—å –ø–æ-—Ä—ñ–∑–Ω–æ–º—É —Ä–µ–Ω–¥–µ—Ä–∏—Ç–∏ —Å–∏–º–≤–æ–ª–∏ Unicode")
    print("–û—Å–æ–±–ª–∏–≤–æ –ø—Ä–æ–±–ª–µ–º–∞—Ç–∏—á–Ω—ñ —Å–∏–º–≤–æ–ª–∏ –∑ Variation Selector (FE0F)")
    
    return checkmarks

def test_telegram_keyboard_behavior():
    """–ú–æ–¥–µ–ª—é—î–º–æ –ø–æ–≤–µ–¥—ñ–Ω–∫—É Telegram –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏"""
    
    print("\n" + "=" * 80)
    print("üì± –ú–û–î–ï–õ–Æ–í–ê–ù–ù–Ø –ü–û–í–ï–î–Ü–ù–ö–ò TELEGRAM –ö–õ–ê–í–Ü–ê–¢–£–†–ò")
    print("=" * 80)
    
    # –¢–µ—Å—Ç—É—î–º–æ –ø–æ—Ç–æ—á–Ω—É –ª–æ–≥—ñ–∫—É –æ–±—Ä–æ–±–∫–∏
    def process_confirmation(text):
        """–°–∏–º—É–ª—é—î –Ω–∞—à—É –ø–æ—Ç–æ—á–Ω—É –ª–æ–≥—ñ–∫—É"""
        text = text.strip()
        if text == "‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏":
            return "CANCEL"
        else:
            return "CONFIRM"
    
    test_inputs = [
        "‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏",
        "‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏", 
        "‚úîÔ∏è –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏",
        "–ø–ø–ø",  # –Ø–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–º—É —Ç–µ—Å—Ç—ñ
        "—É–≤—É–≤—É–≤—É",  # –Ø–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–º—É —Ç–µ—Å—Ç—ñ
        "–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏",
        " ‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ ",  # –ó –ø—Ä–æ–±—ñ–ª–∞–º–∏
        "",
        "random text"
    ]
    
    print("\nüß™ –¢–ï–°–¢–£–í–ê–ù–ù–Ø –†–Ü–ó–ù–ò–• –í–•–û–î–Ü–í:")
    for text in test_inputs:
        result = process_confirmation(text)
        print(f"–í–≤—ñ–¥: '{text}' ‚Üí –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
    
    print("\n‚úÖ –ü–û–¢–û–ß–ù–ê –õ–û–ì–Ü–ö–ê:")
    print("- –í—Å–µ –∫—Ä—ñ–º '‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏' ‚Üí –ü–Ü–î–¢–í–ï–†–î–ñ–ï–ù–ù–Ø")
    print("- –¶–µ –¥–æ–∑–≤–æ–ª—è—î –æ–±—ñ–π—Ç–∏ –ø—Ä–æ–±–ª–µ–º–∏ –∑ Unicode —Å–∏–º–≤–æ–ª–∞–º–∏")
    print("- –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –º–æ–∂–µ –≤–≤–µ—Å—Ç–∏ –±—É–¥—å-—è–∫–∏–π —Ç–µ–∫—Å—Ç –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è")

def test_file_retention_system():
    """–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –Ω–æ–≤–æ—ó —Å–∏—Å—Ç–µ–º–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤"""
    
    print("\n" + "=" * 80)
    print("üìÅ –¢–ï–°–¢–£–í–ê–ù–ù–Ø –°–ò–°–¢–ï–ú–ò –ó–ë–ï–†–ï–ñ–ï–ù–ù–Ø –§–ê–ô–õ–Ü–í")
    print("=" * 80)
    
    try:
        from src.user_state_service import (
            save_registration_state, 
            load_registration_state, 
            complete_registration,
            user_state_manager
        )
        
        # –¢–µ—Å—Ç–æ–≤–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
        test_user_id = 999999999
        
        print(f"\n1. –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ—Å—Ç–æ–≤—É —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {test_user_id}")
        
        # –°–∏–º—É–ª—é—î–º–æ –ø—Ä–æ—Ü–µ—Å —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó
        registration_data = {
            "telegram_id": test_user_id,
            "telegram_username": "test_user",
            "phone": "+420123456789",
            "full_name": "–¢–µ—Å—Ç–æ–≤–∏–π –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á",
            "division": "–î–Ω—ñ–ø—Ä–æ",
            "department": "IT –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç"
        }
        
        # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Å—Ç–∞–Ω —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó
        save_result = save_registration_state(test_user_id, registration_data, "confirm")
        print(f"–ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å—Ç–∞–Ω—É: {'‚úÖ –£—Å–ø—ñ—à–Ω–æ' if save_result else '‚ùå –ü–æ–º–∏–ª–∫–∞'}")
        
        # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Å—Ç–∞–Ω
        loaded_state = load_registration_state(test_user_id)
        print(f"–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞–Ω—É: {'‚úÖ –£—Å–ø—ñ—à–Ω–æ' if loaded_state else '‚ùå –ü–æ–º–∏–ª–∫–∞'}")
        
        if loaded_state:
            print(f"–î–∞–Ω—ñ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó: {loaded_state['registration']['full_name']}")
        
        print(f"\n2. –ó–∞–≤–µ—Ä—à—É—î–º–æ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é (–Ω–æ–≤–∞ –ª–æ–≥—ñ–∫–∞ - –∑–±–µ—Ä—ñ–≥–∞—î–º–æ —Ñ–∞–π–ª)")
        
        # –ó–∞–≤–µ—Ä—à—É—î–º–æ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é (—Ç–µ–ø–µ—Ä —Ñ–∞–π–ª –∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è)
        complete_result = complete_registration(test_user_id)
        print(f"–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó: {'‚úÖ –£—Å–ø—ñ—à–Ω–æ' if complete_result else '‚ùå –ü–æ–º–∏–ª–∫–∞'}")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —â–æ —Ñ–∞–π–ª —ñ—Å–Ω—É—î –∞–ª–µ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î—Ç—å—Å—è —è–∫ –∞–∫—Ç–∏–≤–Ω–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è
        loaded_after_complete = load_registration_state(test_user_id)
        print(f"–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è: {'‚ùå –ù–µ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î—Ç—å—Å—è (–ø—Ä–∞–≤–∏–ª—å–Ω–æ)' if not loaded_after_complete else '‚ö†Ô∏è –í—Å–µ —â–µ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î—Ç—å—Å—è'}")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–æ —Ñ–∞–π–ª —ñ—Å–Ω—É—î
        user_info = user_state_manager.get_user_info(test_user_id)
        if user_info:
            print(f"–§–∞–π–ª —ñ—Å–Ω—É—î: ‚úÖ –¢–∏–ø: {user_info['state']['type']}")
            print(f"–ó–∞–≤–µ—Ä—à–µ–Ω–æ: {user_info['state'].get('completed_at', '–ù–µ–≤—ñ–¥–æ–º–æ')}")
        else:
            print("–§–∞–π–ª –ù–ï —ñ—Å–Ω—É—î: ‚ùå")
        
        print(f"\n3. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é —Ñ–∞–π–ª—ñ–≤ —Å—Ç–∞–Ω—É")
        all_users = user_state_manager.list_all_users()
        print(f"–í—Å—å–æ–≥–æ —Ñ–∞–π–ª—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: {len(all_users)}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è: {e}")
        import traceback
        traceback.print_exc()
        return False

def investigate_real_button_issue():
    """–î–æ—Å–ª—ñ–¥–∂—É—î–º–æ —Å–ø—Ä–∞–≤–∂–Ω—é –ø—Ä–∏—á–∏–Ω—É –ø—Ä–æ–±–ª–µ–º–∏ –∑ –∫–Ω–æ–ø–∫–æ—é"""
    
    print("\n" + "=" * 80)
    print("üïµÔ∏è –î–û–°–õ–Ü–î–ñ–ï–ù–ù–Ø –†–ï–ê–õ–¨–ù–û–á –ü–†–û–ë–õ–ï–ú–ò –ó –ö–ù–û–ü–ö–û–Æ")
    print("=" * 80)
    
    print("\nüîç –ú–û–ñ–õ–ò–í–Ü –ü–†–ò–ß–ò–ù–ò:")
    print("1. üì± –ö–ª—ñ—î–Ω—Ç Telegram:")
    print("   - –ú–æ–±—ñ–ª—å–Ω–∏–π vs Desktop")
    print("   - –†—ñ–∑–Ω—ñ –≤–µ—Ä—Å—ñ—ó –∫–ª—ñ—î–Ω—Ç—É")
    print("   - –û–ø–µ—Ä–∞—Ü—ñ–π–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ (iOS/Android/Web)")
    
    print("\n2. üåê –ú–µ—Ä–µ–∂–µ–≤—ñ –ø—Ä–æ–±–ª–µ–º–∏:")
    print("   - –ó–∞—Ç—Ä–∏–º–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏")
    print("   - –í—Ç—Ä–∞—Ç–∞ –ø–∞–∫–µ—Ç—ñ–≤")
    print("   - –ü—Ä–æ–±–ª–µ–º–∏ –∑ Telegram API")
    
    print("\n3. ü§ñ –ü—Ä–æ–±–ª–µ–º–∏ –±–æ—Ç–∞:")
    print("   - –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –Ω–µ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î—Ç—å—Å—è")
    print("   - –ö–æ–Ω—Ñ–ª—ñ–∫—Ç –∑ —ñ–Ω—à–∏–º–∏ –æ–±—Ä–æ–±–Ω–∏–∫–∞–º–∏")
    print("   - –í—Ç—Ä–∞—Ç–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É")
    
    print("\n4. üë§ –ü–æ–≤–µ–¥—ñ–Ω–∫–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:")
    print("   - –í–≤—ñ–¥ —Ç–µ–∫—Å—Ç—É –∑–∞–º—ñ—Å—Ç—å –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏")
    print("   - –ù–µ–≤–∏–¥–∏–º—ñ—Å—Ç—å –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏")
    print("   - –ü–ª—É—Ç–∞–Ω–∏–Ω–∞ –∑ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º")
    
    print("\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–Ü–á –î–õ–Ø –î–Ü–ê–ì–ù–û–°–¢–ò–ö–ò:")
    print("1. –î–æ–¥–∞—Ç–∏ –¥–µ—Ç–∞–ª—å–Ω–µ –ª–æ–≥—É–≤–∞–Ω–Ω—è –æ—Ç—Ä–∏–º–∞–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç—É (–≤–∫–ª—é—á–Ω–æ –∑ hex)")
    print("2. –ó—Ä–æ–±–∏—Ç–∏ —Å–∫—Ä—ñ–Ω—à–æ—Ç —Ç–æ–≥–æ, —â–æ –±–∞—á–∏—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á")
    print("3. –¢–µ—Å—Ç—É–≤–∞—Ç–∏ –∑ —Ä—ñ–∑–Ω–∏—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤ Telegram")
    print("4. –î–æ–¥–∞—Ç–∏ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")

def create_button_debug_enhancement():
    """–°—Ç–≤–æ—Ä—é—î–º–æ –ø–æ–∫—Ä–∞—â–µ–Ω–µ –ª–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∫–Ω–æ–ø–∫–∏"""
    
    print("\n" + "=" * 80)
    print("üîß –°–¢–í–û–†–ï–ù–ù–Ø –ü–û–ö–†–ê–©–ï–ù–û–ì–û –õ–û–ì–£–í–ê–ù–ù–Ø")
    print("=" * 80)
    
    debug_code = '''
# –î–æ–¥–∞—Ç–∏ –≤ global_registration_handler –ø—ñ—Å–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç—É:

elif registration_step == "confirm":
    confirmation = update.message.text.strip()
    
    # üîç –î–û–î–ê–ù–ï –î–ï–¢–ê–õ–¨–ù–ï –õ–û–ì–£–í–ê–ù–ù–Ø
    logger.info(f"=== BUTTON DEBUG INFO ===")
    logger.info(f"Raw text: '{update.message.text}'")
    logger.info(f"Stripped text: '{confirmation}'")
    logger.info(f"Text length: {len(confirmation)}")
    logger.info(f"UTF-8 bytes: {confirmation.encode('utf-8')}")
    logger.info(f"Hex representation: {confirmation.encode('utf-8').hex()}")
    logger.info(f"Unicode codepoints: {[ord(c) for c in confirmation]}")
    logger.info(f"User ID: {update.effective_user.id}")
    logger.info(f"Chat ID: {update.effective_chat.id}")
    logger.info(f"Message ID: {update.message.message_id}")
    logger.info(f"=========================")
    
    # –î–∞–ª—ñ –π–¥–µ —ñ—Å–Ω—É—é—á–∞ –ª–æ–≥—ñ–∫–∞...
'''
    
    print("üìù –ö–û–î –î–õ–Ø –î–û–î–ê–í–ê–ù–ù–Ø –í –û–ë–†–û–ë–ù–ò–ö:")
    print(debug_code)
    
    return debug_code

if __name__ == "__main__":
    print("üöÄ –ó–ê–ü–£–°–ö –î–û–°–õ–Ü–î–ñ–ï–ù–ù–Ø –ü–†–û–ë–õ–ï–ú–ò –ó –ö–ù–û–ü–ö–û–Æ –ü–Ü–î–¢–í–ï–†–î–ñ–ï–ù–ù–Ø")
    print(f"–ß–∞—Å: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    # –í–∏–∫–æ–Ω—É—î–º–æ –≤—Å—ñ —Ç–µ—Å—Ç–∏
    test_button_encoding()
    test_telegram_keyboard_behavior()
    test_file_retention_system()
    investigate_real_button_issue()
    create_button_debug_enhancement()
    
    print("\n" + "=" * 80)
    print("‚úÖ –î–û–°–õ–Ü–î–ñ–ï–ù–ù–Ø –ó–ê–í–ï–†–®–ï–ù–û")
    print("=" * 80)
    print("\nüìã –ü–Ü–î–°–£–ú–û–ö:")
    print("1. ‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤ –∑–º—ñ–Ω–µ–Ω–∞ –Ω–∞ –∞—Ä—Ö—ñ–≤—É–≤–∞–Ω–Ω—è")
    print("2. ‚úÖ –ü–æ—Ç–æ—á–Ω–∞ –ª–æ–≥—ñ–∫–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —Ä–æ–±–æ—á–∞—è (–≥–Ω—É—á–∫–∞)")
    print("3. üîç –ü–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞—Ç–∏ –¥–µ—Ç–∞–ª—å–Ω–µ –ª–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏")
    print("4. üì± –ú–æ–∂–ª–∏–≤–∞ –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–ª—ñ—î–Ω—Ç—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∞–±–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—ñ –∫–Ω–æ–ø–æ–∫")
    print("\nüéØ –ù–ê–°–¢–£–ü–ù–Ü –ö–†–û–ö–ò:")
    print("- –î–æ–¥–∞—Ç–∏ –ø–æ–∫—Ä–∞—â–µ–Ω–µ –ª–æ–≥—É–≤–∞–Ω–Ω—è")
    print("- –ü—Ä–æ—Ç–µ—Å—Ç—É–≤–∞—Ç–∏ –∑ —Ä—ñ–∑–Ω–∏—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤")
    print("- –°–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—Ç–∏ –∑–∞ –ø–æ–≤–µ–¥—ñ–Ω–∫–æ—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤")
